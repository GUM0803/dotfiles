[[plugins]] # Coffee Script
repo = 'kchmck/vim-coffee-script'
on_ft = 'coffee'

[[plugins]] # Jade
repo = 'digitaltoad/vim-jade'
on_ft = 'jade'

[[plugins]] # Vim Json 
repo = 'elzr/vim-json'
on_ft = 'json'
hook_add = '''
  let g:vim_json_syntax_conceal = 0
'''

[[plugins]] # Open Browser 
repo = 'tyru/open-browser.vim'
on_ft = 'markdown'

[[plugins]] # Previm 
repo = 'kannokanno/previm'
on_ft = 'markdown'
hook_add = '''
  let g:previm_disable_default_css = 1
  let g:previm_custom_css_path     = expand('~/.vim/bundle/github-markdown-css/github-markdown.css')
  augroup PrevimSettings
    autocmd!
    autocmd BufNewFile,BufRead *.{md,mdwn,mkd,mkdn,mark*} set filetype=markdown
  augroup END
'''

[[plugins]] # 2hs 
repo = 'dag/vim2hs'
on_ft = 'haskell'

[[plugins]] # Ghcmod 
repo = 'eagletmt/ghcmod-vim'
on_ft = 'haskell'

[[plugins]] # Neco Ghc 
repo = 'ujihisa/neco-ghc'
on_ft = 'haskell'

[[plugins]] # Vim Toml
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]] # Vim Blade
repo = 'jwalton512/vim-blade'
on_ft = 'blade'
hook_add = '''
  augroup LaravelBladeSettings
    autocmd!
    autocmd FileType blade
      \ let b:caw_wrap_oneline_comment = [ '{{--', '--}}' ]
  augroup END
'''

[[plugins]] # Marching
repo = 'osyo-manga/vim-marching'
on_ft = ['c', 'cpp']
if = "executable('clang')"
hook_add = '''
  " clang コマンドの設定
  let g:marching_clang_command = "/usr/bin/clang"

  " オプションを追加する
  " filetype=cpp に対して設定する場合
  let g:marching#clang_command#options = {
  \   "cpp" : "-std=gnu++1y"
  \}

  " インクルードディレクトリのパスを設定
  let g:marching_include_paths = [
  \   "/usr/include"
  \]

  " neocomplete.vim と併用して使用する場合
  let g:marching_enable_neocomplete = 1

  if !exists('g:neocomplete#force_omni_input_patterns')
    let g:neocomplete#force_omni_input_patterns = {}
  endif

  let g:neocomplete#force_omni_input_patterns.cpp =
      \ '[^.[:digit:] *\t]\%(\.\|->\)\w*\|\h\w*::\w*'

  " 処理のタイミングを制御する
  " 短いほうがより早く補完ウィンドウが表示される
  " ただし、marching.vim 以外の処理にも影響するので注意する
  set updatetime=200

  " オムニ補完時に補完ワードを挿入したくない場合
  imap <buffer> <C-x><C-o> <Plug>(marching_start_omni_complete)

  " キャッシュを削除してからオムに補完を行う
  imap <buffer> <C-x><C-x><C-o> <Plug>(marching_force_start_omni_complete)


  " 非同期ではなくて、同期処理でコード補完を行う場合
  " この設定の場合は vimproc.vim に依存しない
  " let g:marching_backend = "sync_clang_command"
'''

[[plugins]]
repo = 'violetyk/neocomplete-php.vim'
on_ft = 'php'
if = "executable('svn')"
hook_add = '''
  let g:neocomplete_php_locale = 'ja'
'''

[[plugins]] # Rust 
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
